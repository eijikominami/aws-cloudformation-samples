AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationSamples/cloudops/ec2.yaml

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'EC2 Configuration'
        Parameters: 
          - AutoScalingDesiredCapacity
          - AutoScalingMaxSize
          - EC2ImageId
      - Label: 
          default: 'Data Lifecycle Manager Configuration'
        Parameters: 
          - EC2DailySnapshotScheduledAt
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - Email
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment
          - TagKey
          - TagValue

Parameters:
  AutoScalingDesiredCapacity:
    Type: Number
    Default: 1
    MinValue: 1
    Description: AutoScaling Desired Capacity [required]
  AutoScalingMaxSize:
    Type: Number
    Default: 1
    MinValue: 1
    Description: AutoScaling Max Size [required]
  EC2DailySnapshotScheduledAt:
    Type: String
    Default: '17:00'  
    Description: Daily Snapshot time (HH:MM)
  EC2ImageId:
    Type: AWS::EC2::Image::Id
    Default: ami-08a8688fb7eacb171
    AllowedPattern: ^ami-.+$
    Description: The EC2 Image Id [required]
  Email:
    Type: String
    Default: ''
    Description: The email address
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-samples
    AllowedPattern: .+

Conditions:
  CreateSNSSubscription: !Not [ !Equals [ !Ref Email, ''] ]

Resources:
  # Service-linked Role
  ServiceLinkedRoleForInspector:
    Type: AWS::IAM::ServiceLinkedRole
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties: 
      AWSServiceName: inspector.amazonaws.com
      Description: A service-linked role required for Amazon Inspector to access your resources.
  # EC2
  EC2:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Parameters:
        AutoScalingDesiredCapacity: !Ref AutoScalingDesiredCapacity
        AutoScalingMaxSize: !Ref AutoScalingMaxSize
        AutoScalingLoadBalancerType: application
        EC2DailySnapshotScheduledAt: !Ref EC2DailySnapshotScheduledAt
        EC2ImageId: !Ref EC2ImageId
        Route53HostedZoneId: ''
        SNSForAlertArn: !GetAtt SNSForAlert.Outputs.SNSTopicArn
        SNSForDeploymentArn: !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/web-servers/template.yaml
  SystemsManager:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Parameters:
        LogicalNamePrefix: !Ref AWS::StackName
        SNSForAlertArn: !GetAtt SNSForAlert.Outputs.SNSTopicArn
        SNSForDeploymentArn: !GetAtt SNSForDeployment.Outputs.SNSTopicArn
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/cloudops/ssm.yaml
  # Security
  SecurityHub:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Parameters:
        SNSForAlertArn: !GetAtt SNSForAlert.Outputs.SNSTopicArn
        SNSForDeploymentArn: !GetAtt SNSForDeployment.Outputs.SNSTopicArn
        LogicalNamePrefix: !Ref AWS::StackName
        TagValue: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/securityhub.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Inspector:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Parameters: 
        LogicalNamePrefix: !Ref AWS::StackName
        SNSForAlertArn: !GetAtt SNSForAlert.Outputs.SNSTopicArn
        SNSForDeploymentArn: !GetAtt SNSForDeployment.Outputs.SNSTopicArn
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/inspector.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  GuardDuty:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Parameters: 
        LogicalNamePrefix: !Ref AWS::StackName
        SNSForAlertArn: !GetAtt SNSForAlert.Outputs.SNSTopicArn
        SNSForDeploymentArn: !GetAtt SNSForDeployment.Outputs.SNSTopicArn
        TagValue: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/guardduty.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # SNS       
  SNSForAlert:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.29
      NotificationARNs:
        - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.29
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSSubscription:
    Condition: CreateSNSSubscription
    Type: AWS::SNS::Subscription
    Properties: 
      Endpoint: !Ref Email
      Protocol: email-json
      TopicArn: !GetAtt SNSForAlert.Outputs.SNSTopicArn

Outputs:
  LoadBalancerDNSName:
    Description: LoadBalancer DNS Name
    Value: !GetAtt EC2.Outputs.LoadBalancerDNSName