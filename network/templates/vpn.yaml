AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationSamples/network/vpn creates a VPN connection.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Network Configuration'
        Parameters: 
          - CustomerGatewayOutsideIpAddress
          - StaticRoutesOnly
          - SubnetIds
          - VpcId
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment 
          - TagKey
          - TagValue

Parameters:
  CustomerGatewayOutsideIpAddress:
    Type: String
    AllowedPattern: ^[0-9./]*$
    Description: The Internet-routable IP address for the customer gateway's outside interface [required]
  StaticRoutesOnly:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: Indicates whether the VPN connection uses static routes only [required] 
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The IDs of one or more subnets [required] 
  VpcId:
    Type: AWS::EC2::VPC::Id
    AllowedPattern: .+
    Description: The ID of the VPC [required]
  SNSForDeploymentArn:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-samples
    AllowedPattern: .+

Conditions:
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  Development: !Equals [ !Ref Environment, development]

Resources:
  TransitGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        SubnetIds: !Join [ ',', !Ref SubnetIds ]
        VpcId: !Ref VpcId
        Environment: !Ref Environment
        LogicalName: !Ref AWS::StackName
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/network/transitgateway.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/network/transitgateway.yaml
  VPN:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomerGatewayOutsideIpAddress: !Ref CustomerGatewayOutsideIpAddress
        StaticRoutesOnly: !Ref StaticRoutesOnly
        TransitGatewayId: !GetAtt TransitGateway.Outputs.TransitGatewayId
        Environment: !Ref Environment
        LogicalName: !Ref AWS::StackName
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/network/vpn.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/network/vpn.yaml
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.1.24
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue